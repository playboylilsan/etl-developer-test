# Я писал код без обработки исключений и всего такого, только функции для решения поставленных задач.
# 1.Написать функцию is_prime, принимающую 1 аргумент — число от 0 до 1000, и возвращающую True, если оно простое, и False - иначе.
def is_prime(num):
    if num > 1:
        for i in range(2, int(num/2)+1):
            if (num % i) == 0:
                return False
        else:
            return True
    else:
        return False
      
# 2.Написать функцию square, принимающую 1 аргумент — сторону квадрата, и возвращающую 3 значения (с помощью кортежа): периметр квадрата, площадь квадрата и диагональ квадрата
def square(num):
    square_tuple = (4*num, num**2, (2**0.5)*num)
    return square_tuple

# 3.Пользователь делает вклад в размере a рублей сроком на years лет под 10% годовых (каждый год размер его вклада увеличивается на 10%. 
# Эти деньги прибавляются к сумме вклада, и на них в следующем году тоже будут проценты).
# Написать функцию bank, принимающая аргументы a и years, и возвращающую сумму, которая будет на счету пользователя.
from decimal import * # Я постарался избавиться от неточности с помощью Decimal, ибо это код для потенциальной банковской сферы, где погрешности быть не должно 
def bank(a,years):
    total = Decimal(str(a)) * Decimal(str(1.1)) ** Decimal(str(years)) #я поставил вообще все в Decimal, ибо все значения могут быть с плавающей точкой(в теории)
    return total
  
